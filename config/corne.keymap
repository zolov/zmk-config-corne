/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        wps {
            bindings = <&mo 4>;
            key-positions = <24 25>;
        };
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        new_macro_1105: new_macro_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(R) &kp W &kp Z &kp LS(U) &kp C &kp LS(T) &kp LS(Z) &kp N2 &kp LS(X) &kp N0 &kp N0 &kp B &kp AT>;
            label = "NEW_MACRO_1";
        };

        new_macro_1605: new_macro_1605 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N3 &kp N3 &kp G &kp BSLH &kp N9 &kp LS(U) &kp LS(W) &kp Y &kp N7 &kp LS(K) &kp LBKT &kp LS(W)>;
            label = "NEW_MACRO_1605";
        };

        new_macro_pcidss: new_macro_pcidss {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Q &kp LS(K) &kp LS(D) &kp N4 &kp O &kp LS(T) &kp LS(W) &kp E &kp MINUS &kp QMARK &kp G &kp J &kp LS(Q) &kp V &kp I>;
            label = "NEW_MACRO_PCIDSS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q    &kp W  &kp E         &kp R             &kp T          &kp Y        &kp U            &kp I      &kp O    &kp P     &kp LEFT_BRACKET
&kp LEFT_SHIFT    &kp A    &kp S  &kp D         &kp F             &kp G          &kp H        &kp J            &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &lt 4 Z  &kp X  &kp C         &kp V             &kp B          &kp N        &kp M            &kp COMMA  &kp DOT  &kp FSLH  &kp RBKT
                                  &kp LEFT_ALT  &mt LEFT_GUI ESC  &lt 1 SPACE    &lt 1 ENTER  &lt 1 BACKSPACE  &lt 2 DEL
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB           &kp EXCL        &kp AT     &kp HASH      &kp DLLR          &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp GRAVE
&kp LEFT_SHIFT    &kp MINUS       &kp EQUAL  &kp LBKT      &kp LBRC          &kp LPAR     &kp MINUS  &kp EQUAL  &kp PIPE   &kp LBKT  &kp RBKT  &kp DQT
&kp LEFT_CONTROL  &kp UNDERSCORE  &kp PLUS   &kp RBKT      &kp RBRC          &kp RPAR     &kp UNDER  &kp PLUS   &kp BSLH   &kp LBRC  &kp RBRC  &kp TILDE
                                             &kp LEFT_ALT  &kp LEFT_COMMAND  &kp SPACE    &kp RET    &trans     &mo 3
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB           &kp N1  &kp N2  &kp N3        &kp N4            &kp N5       &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &none
&kp LEFT_SHIFT    &trans  &trans  &trans        &trans            &trans       &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&kp LEFT_CONTROL  &trans  &trans  &trans        &trans            &trans       &trans    &trans    &trans  &trans     &trans  &none
                                  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp SPACE    &kp RET   &mo 3     &trans
            >;
        };

        extra_layer {
            bindings = <
&kp K_PREV        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp K_VOLUME_DOWN  &kp K_MUTE  &kp K_VOLUME_UP
&kp C_PLAY_PAUSE  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6          &kp F7            &kp F8      &kp F9             &kp F10     &kp K_MUTE
&kp C_NEXT        &trans        &bt BT_CLR    &trans        &trans        &trans          &trans          &trans            &trans      &trans             &trans      &kp K_VOLUME_DOWN
                                              &trans        &trans        &trans          &trans          &trans            &trans
            >;
        };

        workspaces {
            bindings = <
&trans  &kp LC(NUMBER_1)  &kp LC(NUMBER_2)  &kp LC(NUMBER_3)   &kp LC(NUMBER_4)  &kp LC(NUMBER_5)    &kp LC(NUMBER_6)  &kp LC(NUMBER_7)  &kp LC(NUMBER_8)  &kp LC(N9)  &kp LC(N0)  &trans
&trans  &trans            &trans            &trans             &trans            &trans              &trans            &trans            &trans            &trans      &trans      &trans
&trans  &trans            &trans            &new_macro_pcidss  &new_macro_1605   &new_macro_1105     &trans            &trans            &trans            &trans      &trans      &trans
                                            &trans             &trans            &trans              &trans            &trans            &trans
            >;
        };
    };
};

/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        lpar {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <19 20>;
        };

        rpar {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <20 21>;
        };

        lbrc {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <7 8>;
        };

        rbrc {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <8 9>;
        };

        lbrkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <7 19>;
        };

        rbrkt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <21 9>;
        };

        lt {
            bindings = <&kp LT>;
            key-positions = <31 32>;
        };

        gt {
            bindings = <&kp GT>;
            key-positions = <32 33>;
        };
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        new_macro_1105: new_macro_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(R) &kp W &kp Z &kp LS(U) &kp C &kp LS(T) &kp LS(Z) &kp N2 &kp LS(X) &kp N0 &kp N0 &kp B &kp AT>;
            label = "NEW_MACRO_1";
        };

        new_macro_1605: new_macro_1605 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N3 &kp N3 &kp G &kp BSLH &kp N9 &kp LS(U) &kp LS(W) &kp Y &kp N7 &kp LS(K) &kp LBKT &kp LS(W)>;
            label = "NEW_MACRO_1605";
        };

        new_macro_pcidss: new_macro_pcidss {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Q &kp LS(K) &kp LS(D) &kp N4 &kp O &kp LS(T) &kp LS(W) &kp E &kp MINUS &kp QMARK &kp G &kp J &kp LS(Q) &kp V &kp I>;
            label = "NEW_MACRO_PCIDSS";
        };

        new_macro_0908: new_macro_0908 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp LS(X) &kp V &kp LPAR &kp A &kp N7 &kp N0 &kp P &kp L &kp N6 &kp I &kp A &kp O &kp DOT &kp X &kp DQT>;
            label = "NEW_MACRO_0908";
        };

        macro_0910: macro_0910 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp STAR &kp N6 &kp LS(U) &kp N &kp N6 &kp LS(H) &kp LS(B) &kp LS(K) &kp N5 &kp LS(Z) &kp S &kp K>;
            label = "MACRO_0910";
        };

        v11_04_macro: v11_04_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(O) &kp RPAR &kp X &kp LS(L) &kp LS(X) &kp LS(U) &kp N1 &kp LS(F) &kp N2 &kp LS(E) &kp LBRC &kp LS(D) &kp LS(H) &kp N0 &kp V &kp LS(E)>;
            label = "V11_04_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q         &kp W         &kp E         &kp R         &kp T          &kp Y        &kp U          &kp I        &kp O         &kp P            &kp LEFT_BRACKET
&kp LEFT_SHIFT    &hrm LCTRL A  &hrm LSHFT S  &hrm LALT D   &hrm LCMD F   &kp G          &kp H        &hrm RCMD J    &hrm RALT K  &hrm RSHFT L  &hrm RCTRL SEMI  &kp SQT
&kp LEFT_CONTROL  &lt 4 Z       &kp X         &kp C         &kp V         &kp B          &kp N        &kp M          &kp COMMA    &kp DOT       &lt 3 SLASH      &kp RBKT
                                              &kp LEFT_ALT  &kp LEFT_GUI  &lt 1 SPACE    &lt 2 ENTER  &kp BACKSPACE  &kp DEL
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE  &kp EXCL        &kp AT     &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp GRAVE
&trans     &kp MINUS       &kp EQUAL  &kp LBKT  &kp LBRC  &kp LPAR     &kp MINUS  &kp EQUAL  &kp PIPE   &kp LBKT  &kp RBKT  &kp DQT
&trans     &kp UNDERSCORE  &kp PLUS   &kp RBKT  &kp RBRC  &kp RPAR     &kp UNDER  &kp PLUS   &kp BSLH   &kp LBRC  &kp RBRC  &trans
                                      &trans    &trans    &trans       &trans     &trans     &none
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &none
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans  &none
                        &trans  &trans  &trans    &trans    &trans    &trans
            >;
        };

        extra_layer {
            bindings = <
&kp K_PREV        &kp F1  &kp F2      &kp F3         &kp F4         &kp F5           &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp K_VOLUME_UP
&kp C_PLAY_PAUSE  &none   &none       &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2    &none   &none   &none   &none   &none    &kp K_MUTE
&kp C_NEXT        &none   &bt BT_CLR  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2     &trans  &trans  &trans  &trans  &trans   &kp K_VOLUME_DOWN
                                      &none          &bt BT_PRV     &bt BT_NXT       &none   &none   &none
            >;
        };

        workspaces {
            bindings = <
&trans  &kp LC(NUMBER_1)  &kp LC(NUMBER_2)  &kp LC(NUMBER_3)  &kp LC(NUMBER_4)  &kp LC(NUMBER_5)    &kp LC(NUMBER_6)  &kp LC(NUMBER_7)  &kp LC(NUMBER_8)  &kp LC(N9)  &kp LC(N0)  &trans
&trans  &trans            &trans            &trans            &trans            &v11_04_macro       &trans            &trans            &trans            &trans      &trans      &trans
&trans  &trans            &trans            &trans            &trans            &trans              &trans            &trans            &trans            &trans      &trans      &trans
                                            &trans            &trans            &trans              &trans            &trans            &trans
            >;
        };
    };
};
